name: Publish crates on version change on push to main

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Publish crates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Publish caryatid_macros if version changed
        run: |
          current_version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.name=="caryatid_macros").version')
          published_version=$(curl -s https://crates.io/api/v1/crates/caryatid_macros | jq -r '.crate.max_version')

          echo "Current Version (caryatid_macros): $current_version"
          echo "Published Version (caryatid_macros): $published_version"

          if [ "$current_version" != "$published_version" ]; then
            echo "Version changed. Publishing caryatid_macros..."
            cargo publish --manifest-path=sdk/macros/Cargo.toml
          else
            echo "No version change detected for caryatid_macros."
          fi
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish caryatid_sdk if version changed
        run: |
          current_version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.name=="caryatid_sdk").version')
          published_version=$(curl -s https://crates.io/api/v1/crates/caryatid_sdk | jq -r '.crate.max_version')

          echo "Current Version (caryatid_sdk): $current_version"
          echo "Published Version (caryatid_sdk): $published_version"

          if [ "$current_version" != "$published_version" ]; then
            echo "Version changed. Publishing caryatid_sdk..."
            cargo publish --manifest-path=sdk/Cargo.toml
          else
            echo "No version change detected for caryatid_sdk."
          fi
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish caryatid_process if version changed
        run: |
          current_version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.name=="caryatid_process").version')
          published_version=$(curl -s https://crates.io/api/v1/crates/caryatid_process | jq -r '.crate.max_version')

          echo "Current Version (caryatid_process): $current_version"
          echo "Published Version (caryatid_process): $published_version"

          if [ "$current_version" != "$published_version" ]; then
            echo "Version changed. Publishing caryatid_process..."
            cargo publish --manifest-path=process/Cargo.toml
          else
            echo "No version change detected for caryatid_process."
          fi
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish caryatid_module_clock if version changed
        run: |
          current_version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.name=="caryatid_module_clock").version')
          published_version=$(curl -s https://crates.io/api/v1/crates/caryatid_module_clock | jq -r '.crate.max_version')

          echo "Current Version (caryatid_module_clock): $current_version"
          echo "Published Version (caryatid_module_clock): $published_version"

          if [ "$current_version" != "$published_version" ]; then
            echo "Version changed. Publishing caryatid_module_clock..."
            cargo publish --manifest-path=modules/clock/Cargo.toml
          else
            echo "No version change detected for caryatid_module_clock."
          fi
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish caryatid_module_rest_server if version changed
        run: |
          current_version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.name=="caryatid_module_rest_server").version')
          published_version=$(curl -s https://crates.io/api/v1/crates/caryatid_module_rest_server | jq -r '.crate.max_version')

          echo "Current Version (caryatid_module_rest_server): $current_version"
          echo "Published Version (caryatid_module_rest_server): $published_version"

          if [ "$current_version" != "$published_version" ]; then
            echo "Version changed. Publishing caryatid_module_rest_server..."
            cargo publish --manifest-path=modules/rest_server/Cargo.toml
          else
            echo "No version change detected for caryatid_module_rest_server."
          fi
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Publish caryatid_module_spy if version changed
        run: |
          current_version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.name=="caryatid_module_spy").version')
          published_version=$(curl -s https://crates.io/api/v1/crates/caryatid_module_spy | jq -r '.crate.max_version')

          echo "Current Version (caryatid_module_spy): $current_version"
          echo "Published Version (caryatid_module_spy): $published_version"

          if [ "$current_version" != "$published_version" ]; then
            echo "Version changed. Publishing caryatid_module_spy..."
            cargo publish --manifest-path=modules/spy/Cargo.toml
          else
            echo "No version change detected for caryatid_module_spy."
          fi
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
